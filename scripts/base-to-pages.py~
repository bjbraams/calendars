import sys
import datetime
import yaml
import myyaml

def new_dest(y,dest):
    # Prepare new destination
    try:
        with open(f'{y}/_data/main.yml','r') as fmain:
            try:
                y_prev = yaml.safe_load(fmain)
            except yaml.YAMLError as e:
                sys.exit(
                    f'YAML parsing error in {y}/_data/main.yml: {str(e)}')
            except:
                sys.exit(f'Unidentified error in {y}/_data/main.yml')
        if not y_prev:
            y_prev = {}
        with open(f'{y}/_data/prev.yml','w') as fprev:
            myyaml.dump(y_prev,fprev)
        dest =\
            {'prev':y_prev,
             'main':open(f'{y}/_data/main.yml','w'),
             'hl':open(f'{y}/_data/highlights.yml','w'),
             'new':open(f'{y}/_data/new-{TODAY}.yml','a')}
    except: 
        print (f'Not accessible: {y}/_data/')
        dest = None

TODAY = datetime.date.today().strftime('%Y-%m-%d')

# Read and check the main data file
try:
    data = yaml.safe_load(sys.stdin)
except yaml.YAMLError as e:
    sys.exit(f'YAML parsing error in stdin: {str(e)}')
except:
    sys.exit('Cannot read stdin')
if not data:
    data = {}
if not isinstance(data,dict):
    sys.exit('Input is not a dictionary')
print('Checking the input ...')
for key, event in data.items():
    errors = myyaml.check_event(key,event)
    if errors:
        print(f'Errors in item {key}:\n')
        print(errors)

# Check to proceed
input(f'Return to proceed, Ctrl-c to cancel')

# Process and write the results
pages = base_to_pages(data)
for y, p in pages.items():
    new_dest(y,dest)
    if dest:
        for x in p['main']:
            myyaml.dump({x:None},dest['main'])
            if x not in dest['prev'].keys():
                myyaml.dump({x:none},dest['new'])
        for x in p['highlights']:
            myyaml.dump({x:None},dest['hl'])
        dest['main'].close()
        dest['hl'].close()
        dest['new'].close()
