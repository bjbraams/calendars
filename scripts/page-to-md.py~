import sys
import yaml
import event_yaml_to_md from myyaml


def dest(y,dests):
    # New destination, expand dests
    try:
        dests[y] = [open(f'{y}/_includes/all.md','w'),
                       open(f'{y}/_includes/highlights.md','w'),
                       open(f'{y}/_includes/new.md','w')]
    except:
        print (f'Not accessible: {y}/_includes/')
        dests[y] = None

def process(x,y):
    # entry x to y/_includes/fn, with formatting
    # fn and dests are global variables
    if y.strip().startswith('+'):
        hl = True
        y1 = y.lstrip(' +').rstrip()
    else:
        hl = False
        y1 = y.strip()
    if y1 not in dests.keys():
        try:
            dests[y1] = open(y1+'/_includes/'+fn+'.md', 'w')
        except:
            print (f'not found: {y1}/_includes/')
            dests[y1] = None
    if dests[y1]:
        dests[y1].write(event_yaml_to_md(x,hl)+'\n\n')

fn = sys.argv[1]
data = yaml.safe_load(sys.stdin)
if not data:
    data = []
dests = {} # Dictionary entries will be <filename>:<file>.

for x in data:
    for y in x['kw'].split(','):
        process(x,y)
